---
description: 
globs: 
---

# Your rule content

Description:
Rules and best practices for Next.js 15+ frontend development.

Globs:
*.tsx, *.ts, src/**/*.tsx, src/**/*.ts

# Version Control
- Always check versions in [package.json](mdc:package.json) before code generation
- Stay up-to-date with Next.js 15 documentation and best practices

# Component Architecture
- Use shadcn/ui components as primary UI building blocks
  Reference: https://ui.shadcn.com/docs
- Prefer server components by default
- Avoid useEffect for data fetching, use server components instead

## Component Structure
- Use `const` declarations for React components
- Always create TypeScript interfaces for props:

```typescript
interface ComponentNameProps {
// props definition
}
const ComponentName: React.FC<ComponentNameProps> = ({ ...props }) => {
// component logic
}
```

## Component Organization
- Break down large components into smaller, reusable pieces
- Suggested file structure:
  ```
  components/
    ├── ComponentName/
    │   ├── index.tsx
    │   ├── SubComponent1.tsx
    │   ├── SubComponent2.tsx
    │   └── types.ts
  ```

## Data Fetching
- ✅ DO: Use server components for data fetching
  ```typescript
  async function DataComponent() {
    const data = await fetchData()
    return <div>{data}</div>
  }
  ```
- ❌ DON'T: Use useEffect for API calls
  ```typescript
  // Avoid this pattern
  useEffect(() => {
    fetch('/api/data')
  }, [])
  ```

## UI Components
- Use shadcn/ui components when available
- Follow shadcn/ui documentation for implementation
- Customize components using provided configuration options
